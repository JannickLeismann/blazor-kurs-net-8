@using SolarTech.Helpers;

@attribute [Authorize]
@rendermode InteractiveServer
@page "/edit-order/{id:int}"

@inject SolarTech.Data.SolarTechDbContext DbContext
@inject NavigationManager NavigationManager

<h3>Edit Order</h3>

<EditForm Model="@order" OnSubmit="HandleSubmit">

    <div class="form-group">
        <label>Date</label>
        <InputDate class="form-control" @bind-Value="order.Date" />
    </div>

    <div class="form-group">
        <label>Description</label>
        <InputText class="form-control" @bind-Value="order.Description" />
    </div>

    <div class="form-group">
        <label>Net</label>
        <InputNumber class="form-control" @bind-Value="order.NetAmount" />
    </div>

    <div class="form-group">
        <label>Image</label>
        <InputFile OnChange="HandleImageUpload" class="form-control" />
    </div>

    <div class="form-group">
        <label>Customer</label>
        <InputSelect class="form-control" @bind-Value="order.CustomerId">

            @foreach (var customer in customers)
            {
                <option value="@customer.Id">@customer.Name</option>
            }
        </InputSelect>
    </div>


    <div class="mt-4">
        <button type="submit" class="btn btn-primary">Update</button>
        <button type="button" @onclick="Cancel" class="btn btn-secondary">Cancel</button>
    </div>

</EditForm>


@code {

    [Parameter]
    public int id { get; set; }

    private Order order;
    private List<Customer> customers;

    private IBrowserFile selectedImage;


    protected override void OnInitialized()
    {
        base.OnInitialized();

        customers = DbContext.Customers.ToList();
        order = DbContext.Orders.Find(id);
    }

    private void HandleImageUpload(InputFileChangeEventArgs e)
    {
        selectedImage = e.File;
    }

    private async Task HandleSubmit()
    {

        if (selectedImage != null)
        {
            OrderFileUploadHelper uploaderHelper = new OrderFileUploadHelper();
            var filePath = await uploaderHelper.UploadOrderImage(selectedImage);
            order.ImagePath = filePath;
        }

        DbContext.Orders.Update(order);
        await DbContext.SaveChangesAsync();
        NavigationManager.NavigateTo("/orders");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/orders", forceLoad: true);
    }

}
